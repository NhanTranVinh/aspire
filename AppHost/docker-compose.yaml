services:
  server:
    image: "mcr.microsoft.com/mssql/server:2022-latest"
    environment:
      ACCEPT_EULA: "Y"
      MSSQL_SA_PASSWORD: "${PASSWORD}"
    ports:
      - "8000:1433"
    networks:
      - "aspire"
  migration:
    image: "${MIGRATION_IMAGE}"
    environment:
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY: "in_memory"
      ConnectionStrings__products: "Server=server,1433;User ID=sa;Password=${PASSWORD};TrustServerCertificate=true;Initial Catalog=products"
    depends_on:
      server:
        condition: "service_started"
    networks:
      - "aspire"
  cache:
    image: "docker.io/library/redis:7.4"
    command:
      - "-c"
      - "redis-server --requirepass $$REDIS_PASSWORD"
    entrypoint:
      - "/bin/sh"
    environment:
      REDIS_PASSWORD: "${CACHE_PASSWORD}"
    ports:
      - "8001:6379"
    networks:
      - "aspire"
  warehouse:
    image: "${WAREHOUSE_IMAGE}"
    environment:
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY: "in_memory"
      ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
      HTTP_PORTS: "8002"
      ConnectionStrings__cache: "cache:6379,password=${CACHE_PASSWORD}"
    ports:
      - "8003:8002"
      - "8005:8004"
    depends_on:
      cache:
        condition: "service_started"
    networks:
      - "aspire"
  api:
    image: "${API_IMAGE}"
    environment:
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EXCEPTION_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_EMIT_EVENT_LOG_ATTRIBUTES: "true"
      OTEL_DOTNET_EXPERIMENTAL_OTLP_RETRY: "in_memory"
      ASPNETCORE_FORWARDEDHEADERS_ENABLED: "true"
      HTTP_PORTS: "8006"
      ConnectionStrings__products: "Server=server,1433;User ID=sa;Password=${PASSWORD};TrustServerCertificate=true;Initial Catalog=products"
      services__warehouse__http__0: "http://warehouse:8002"
      ConnectionStrings__random-connection-string: "${RANDOM_CONNECTION_STRING}"
      EXAMPLE_PARAM: "${EXAMPLE_PARAMETER_NAME}"
    ports:
      - "8007:8006"
      - "8009:8008"
    depends_on:
      server:
        condition: "service_started"
    networks:
      - "aspire"
networks:
  aspire:
    driver: "bridge"
